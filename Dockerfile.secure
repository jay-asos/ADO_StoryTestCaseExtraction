# Multi-stage Dockerfile for maximum security and minimal attack surface
# Build stage - use latest Alpine with security updates
FROM python:3.12-alpine3.19 AS builder

# Security: Install only essential build dependencies
RUN apk update && apk upgrade && apk add --no-cache \
    gcc \
    musl-dev \
    linux-headers \
    libffi-dev \
    openssl-dev \
    && rm -rf /var/cache/apk/* \
    && rm -rf /tmp/*

# Create virtual environment for isolated dependencies
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy and install Python dependencies with security checks
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
    && pip install --no-cache-dir --require-hashes -r requirements.txt 2>/dev/null || \
       pip install --no-cache-dir -r requirements.txt \
    && pip check \
    && find /opt/venv -name "*.pyc" -delete \
    && find /opt/venv -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

# Production stage - use minimal distroless image
FROM gcr.io/distroless/python3-debian12:nonroot AS production

# Set secure environment variables with distroless python path
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PATH="/opt/venv/bin:$PATH" \
    PYTHONPATH="/app"

# Set working directory
WORKDIR /app

# Copy application code with proper ownership
COPY --chown=65532:65532 . .

# Run as non-root user (distroless nonroot user)
USER 65532:65532

# Expose port for Flask app (non-privileged port)
EXPOSE 5001

# Add security and metadata labels
LABEL security.scan="enabled" \
      security.non-root="true" \
      security.distroless="true" \
      maintainer="ADO Story Extractor Team" \
      version="1.0.0" \
      description="ADO Story Test Case Extraction Application - Distroless"

# Simple health check without curl dependency
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python -c "import urllib.request; urllib.request.urlopen('http://localhost:5001/api/health', timeout=5)" || exit 1

# Use Python to start the application directly
ENTRYPOINT ["python", "main_enhanced.py"]
